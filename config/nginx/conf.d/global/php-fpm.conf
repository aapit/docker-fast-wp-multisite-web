# Pass all .php files onto a php-fpm/php-fcgi server.
location ~ [^/]\.php(/|$) {
    fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    include snippets/fastcgi-php.conf;

    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    if (!-f $document_root$fastcgi_script_name) {
        return 404;
    }
    # This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

    #include fastcgi_params;
    #fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#    fastcgi_intercept_errors on;
    #fastcgi_pass php;
}

#location ~ \.php$ {
    # Zero-day exploit defense.
    # http://forum.nginx.org/read.php?2,88845,page=3
    # Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
    # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
    #try_files $uri =404;

    #fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    #include fastcgi_params;
    #fastcgi_index index.php;
    #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#    fastcgi_intercept_errors on;
    #fastcgi_pass php;
#include snippets/fastcgi-php.conf;

# Pass all .php files onto a php-fpm/php-fcgi server.
#location ~ [^/]\.php(/|$) {
#	fastcgi_split_path_info ^(.+?\.php)(/.*)$;
#	if (!-f $document_root$fastcgi_script_name) {
#		return 404;
#	}
#	# This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)
#
#	include fastcgi_params;
#	fastcgi_index index.php;
#	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
##	fastcgi_intercept_errors on;
#	fastcgi_pass php:9000;
#}
